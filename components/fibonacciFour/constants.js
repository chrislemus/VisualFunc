const code = [
  'function fib(n) {',
  '   if(n <= 1) return n;',
  '   return fib(n-1) + fib(n-2)',
  '};',
  'fib(2)',
].join('\n');
const defaultFilteredSteps = [
  'EmptyStatement',
  'Program',
  'FunctionDeclaration',
];

const interpreterStepsArray = [
  'ArrayExpression',
  'AssignmentExpression',
  'BinaryExpression',
  'BlockStatement',
  'BreakStatement',
  'CallExpression',
  'CatchClause',
  'ConditionalExpression',
  'ContinueStatement',
  'DebuggerStatement',
  'DoWhileStatement',
  'EmptyStatement',
  'EvalProgram_',
  'ExpressionStatement',
  'ForInStatement',
  'ForStatement',
  'FunctionDeclaration',
  'FunctionExpression',
  'Identifier',
  'IfStatement',
  'LabeledStatement',
  'Literal',
  'LogicalExpression',
  'MemberExpression',
  'NewExpression',
  'ObjectExpression',
  'Program',
  'ReturnStatement',
  'SequenceExpression',
  'SwitchStatement',
  'ThisExpression',
  'ThrowStatement',
  'TryStatement',
  'UnaryExpression',
  'UpdateExpression',
  'VariableDeclaration',
  'WithStatement',
  'WhileStatement',
];

export { code, interpreterStepsArray, defaultFilteredSteps };
